---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9900
    collectives_parachain: &collectives_parachain
      wsPort: 9910
      paraId: &cp_id 1001
  variables:
    chains:
      accounts:
        alice_signer: &alice_signer //Alice
        alice_account32: &alice_acc32 '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'
        alice_ss58: &acc_alice_ss58 '15oF4uVJwmo4TdGW7VfQxNLavjCXviqxT9S1MgbjMNHr6Sp5'

tests:
  - name: Reserve assets from Relay Chain to Collectives Parachain fails
    its:
      - name: Reserve assets from Relay Chain to Collectives Parachain
        actions:
          - extrinsics:
            - chain: *relay_chain
              signer: *alice_signer
              pallet: xcmPallet
              call: limitedReserveTransferAssets
              args: [
                { v3: { 0, interior: { x1: { parachain: *cp_id }}}}, # destination
                { v3: { parents: 0, interior: { x1: { accountId32: { id: *alice_acc32 }}}}}, # beneficiary
                {
                  v3: [
                    {
                      id: { concrete: { 0, interior: { here: true }}},
                      fun: { fungible: 20000000000000 } # 20_000_000_000_000
                    }
                  ]
                }, # assets
                0, # feeAssetItem
                { unlimited: true } # weightLimit
              ]
              events:
                - name: xcmPallet.Attempted
                  chain: *relay_chain
                  result: { outcome: { Complete: {} }}
                - name: dmpQueue.ExecutedDownward
                  chain: *collectives_parachain
                  result: { outcome: { Incomplete: [] }}

      # Fails with the message - "RpcError: 1010: Invalid Transaction: Transaction would exhaust the block limits"
      # Because of the u64::MAX weight set fot the extrinsic to disable it.
      # The test tool does not allow to assert such a fail.

      # - name: Reserve assets from Collectives Parachain to Relay Chain fails
      #   actions:
      #     - extrinsics:
      #       - chain: *collectives_parachain
      #         signer: *alice_signer
      #         pallet: polkadotXcm
      #         call: reserveTransferAssets
      #         args: [
      #           { v3: { parents: 1, interior: { here: true }}}, # destination
      #           { v3: { parents: 0, interior: { x1: { accountId32: { id: *alice_acc32 }}}}}, # beneficiary
      #           {
      #             v3: [
      #               {
      #                 id: { concrete: { parents: 1, interior: { here: true }}},
      #                 fun: { fungible: 10000000000000 } # 10_000_000_000_000
      #               }
      #             ]
      #           }, # assets
      #           0, # feeAssetItem
      #         ]
