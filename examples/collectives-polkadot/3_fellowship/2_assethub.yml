---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9700
    collectives_parachain: &collectives_parachain
      wsPort: 9710
      paraId: &cp_id 1001
    assethub_parachain: &assethub_parachain
      wsPort: 9810
      paraId: &ap_id 1000
  variables:
    fellows_proposal_index: &fellows_proposal_index 1
    chains:
      accounts:
        alice_signer: &alice_signer //Alice

  decodedCalls:
    xcmp_resume_execution_ap:
      chain: *assethub_parachain
      encode: true
      pallet: xcmpQueue
      call: resumeXcmExecution
      args: []
    send_xcmp_resume_execution_cp:
      chain: *collectives_parachain
      encode: false
      pallet: polkadotXcm
      call: send
      args: [
        { v3: { parents: 1, interior: { x1: { parachain: *ap_id }}}}, # destination
        {
          v3: [ #message
            {
              UnpaidExecution: {
                weightLimit: Unlimited
              }
            },
            {
              Transact: {
                originKind: Xcm,
                requireWeightAtMost: {
                  refTime: 300000000, # 300_000_000
                  proofSize: 10000, # 10_000
                },
                call: $xcmp_resume_execution_ap
              }
            }
          ]
        }
      ]

tests:
  - name: Fellowship
    describes:
      - name: The Fellowship resume xcm execution for the xcmp queue on AssetHub
        its:
          - name: Note preimage from the xcm send call to suspend_xcm_execution
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: preimage
                  call: notePreimage
                  args: [
                    $send_xcmp_resume_execution_cp
                  ]
                  events:
                    - name: preimage.Noted
          - name: Submit a proposal to resume xcm execution on AssetHub
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: fellowshipReferenda
                  call: submit
                  args: [
                    {
                      "FellowshipOrigins": "Fellows",
                    },
                    {
                      "Lookup": { # TODO obtain from the call https://github.com/paritytech/parachains-integration-tests/issues/103
                        "hash_": "0x4ccf32184998e75cc58b835bfbda4f208d0186b424b80e1d8bc9da52e6e968bf",
                        "len": 24,
                      },
                    },
                    {
                      "After": 1, 
                    },
                  ]
                  events:
                    - name: fellowshipReferenda.Submitted
          - name: Vote Aye
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: fellowshipCollective
                  call: vote
                  args: [
                    *fellows_proposal_index,
                    true,
                  ]
                  events:
                    - name: fellowshipCollective.Voted
          - name: Submit the decision deposit
            actions:
              - extrinsics:
                - chain: *collectives_parachain
                  signer: *alice_signer
                  pallet: fellowshipReferenda
                  call: placeDecisionDeposit
                  args: [
                    *fellows_proposal_index,
                  ]
                  events:
                    - name: fellowshipReferenda.DecisionDepositPlaced
                    - name: xcmpQueue.Success
                      chain: *assethub_parachain 
