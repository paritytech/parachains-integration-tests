---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 8000
    assets_parachain: &assets_parachain
      wsPort: 8001
      paraId: &ap_id 1000
  variables:
    common:
      require_weight_at_most: &weight_at_most {refTime: 1000000000, proofSize: 200000}
    chains:
      relay_chain:
        signer: &rc_signer //Alice
        assets_parachain_destination: &ap_dest { v3: { 0, interior: { x1: { parachain: *ap_id }}}}
      assets_parachain:
        signer: &ap_signer //Alice
  runtimes:
    asset_hub_wasm:
      path: ../../../bin/releases/runtimes/v1.2.0/asset_hub_kusama_runtime.compact.compressed.wasm
  decodedCalls:
    authorize_upgrade_assets_para:
      chain: *assets_parachain
      pallet: parachainSystem
      call: authorizeUpgrade
      args: [
        $asset_hub_wasm.hash,
        false
      ]
    xcm_send_authorize_upgrade_assets_para:
      chain: *relay_chain
      pallet: xcmPallet
      call: send
      encode: false
      args: [
        *ap_dest,
        {
          v3: [
            {
              UnpaidExecution: {
                weightLimit: Unlimited
              }
            },
            {
              Transact: {
                originKind: Superuser,
                requireWeightAtMost: *weight_at_most,
                call: $authorize_upgrade_assets_para
              }
            }
          ]
        }
      ]

tests:
  - name: Runtime Upgrade
    its:
      - name: Authorize Upgrade sent to AssetHub
        actions:
          - extrinsics:
            - chain: *relay_chain
              sudo: true
              signer: *rc_signer
              pallet: utility
              call: forceBatch
              args: [
                [
                  $xcm_send_authorize_upgrade_assets_para,
                ]
              ]
              events:
                # - name: system.CodeUpdated
                - name: xcmPallet.Sent
                - name: parachainSystem.UpgradeAuthorized
                  chain: *assets_parachain

      - name: AssetHub upgrade is properly executed
        actions:
          - extrinsics:
            - chain: *assets_parachain
              signer: *ap_signer
              pallet: parachainSystem
              call: enactAuthorizedUpgrade
              args: [
                $asset_hub_wasm
              ]
              events:
                - name: parachainSystem.ValidationFunctionStored
          - block_travels:
            - chain: *relay_chain
              count: 20 # validationUpgradeDelay
          - block_travels:
            - chain: *assets_parachain
              count: 1 # validationUpgradeDelay
              # events:
              #   - name: parachainSystem.ValidationFunctionApplied
