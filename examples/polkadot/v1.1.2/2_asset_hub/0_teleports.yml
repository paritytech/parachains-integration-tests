---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 8000
    assets_parachain: &assets_parachain
      wsPort: 8001
      paraId: &ap_id 1000
  variables:
    common:
      weight_threshold:  &weight_threshold { refTime: [30, 30], proofSize: [30, 30] }
    chains:
      relay_chain:
        signer: &rc_signer //Alice
        wallet: &rc_wallet 15oF4uVJwmo4TdGW7VfQxNLavjCXviqxT9S1MgbjMNHr6Sp5
        assets_parachain_destination: &ap_dest { v3: { parents: 0, interior: { x1: { parachain: *ap_id }}}}
        assets_parachain_account: &ap_acc '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'
        assets_parachain_beneficiary: &ap_benf { v3: { parents: 0, interior: { x1: { accountId32: { id: *ap_acc }}}}}
        dot: &rc_dot { concrete: { parents: 0, interior: { here: true }}}
        amount: &amount 1000000000000
        dot_fungible: &rc_dot_fungible { id: *rc_dot, fun: { fungible: *amount }}
      assets_parachain:
        signer: &ap_signer //Alice
        wallet: &ap_wallet 15oF4uVJwmo4TdGW7VfQxNLavjCXviqxT9S1MgbjMNHr6Sp5
        assets_parachain_account: &rc_acc '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d' #Alice
        relay_chain_destination: &rc_dest { v3: { parents: 1, interior: { here: true }}}
        relay_chain_beneficiary: &rc_benf {v3: { parents: 0, interior: { x1: { accountId32: { id: *rc_acc }}}}}
        dot: &ap_dot { concrete: { parents: 1, interior: { here: true }}}
        dot_fungible: &ap_dot_fungible { id: *ap_dot, fun: { fungible: *amount }}

tests:
  - name: Teleports
    its: []
    describes:
      - name: xcmPallet.limitedTeleportAssets (DOT) |  Relay Chain -> AssetHub
        before:
          - name: Get the balances of the Relay Chain's sender & AssetsHub's receiver
            actions:
              - queries:
                  balance_rc_sender_before:
                    chain: *relay_chain
                    pallet: system
                    call: account
                    args: [ *rc_wallet ]
                  balance_ap_receiver_before:
                    chain: *assets_parachain
                    pallet: system
                    call: account
                    args: [ *ap_wallet ]
        its:
          - name: Should teleport native assets from the Relay Chain to the AssetHub
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *rc_signer
                  pallet: xcmPallet
                  call: limitedTeleportAssets
                  args: [
                    *ap_dest, # destination
                    *ap_benf, # beneficiary
                    { v3: [ *rc_dot_fungible ] },
                    0, # feeAssetItem
                    { unlimited: true } # weightLimit
                  ]
                  events:
                    - name: xcmPallet.Attempted
                      result: { outcome: { Complete: { }} }
                    - name: dmpQueue.ExecutedDownward
                      chain: *assets_parachain
                      threshold: *weight_threshold
                      result: {
                        outcome: { Complete: { refTime: '157,962,000', proofSize: '3,593' }}
                      }
              - queries:
                  balance_rc_sender_after:
                    chain: *relay_chain
                    pallet: system
                    call: account
                    args: [ *rc_wallet ]
                  balance_ap_receiver_after:
                    chain: *assets_parachain
                    pallet: system
                    call: account
                    args: [ *ap_wallet ]

          - name: Should reduce the balance of the sender
            actions:
              - asserts:
                  balanceDecreased:
                    args: [
                      {
                        balances: {
                          before: $balance_rc_sender_before,
                          after: $balance_rc_sender_after,
                        },
                        amount: *amount
                      }
                    ]

          - name: Should increase the balance of the receiver
            actions:
              - asserts:
                  balanceIncreased:
                    args: [
                      {
                        balances: {
                          before: $balance_ap_receiver_before,
                          after: $balance_ap_receiver_after,
                        }
                      }
                    ]

      - name: polkadotXcm.limitedTeleportAssets (DOT) |  AssetHub -> Relay Chain
        before:
          - name: Get the balances of the AssetHub's sender & Relay Chain's receiver
            actions:
              - queries:
                  balance_ap_sender_before:
                    chain: *assets_parachain
                    pallet: system
                    call: account
                    args: [ *ap_wallet ]
                  balance_rc_receiver_before:
                    chain: *relay_chain
                    pallet: system
                    call: account
                    args: [ *rc_wallet ]
        its:
          - name: Should teleport native assets back from AssetHub to the Relay Chain
            actions:
              - extrinsics:
                - chain: *assets_parachain
                  signer: *ap_signer
                  pallet: polkadotXcm
                  call: limitedTeleportAssets
                  args: [
                    *rc_dest, # destination
                    *rc_benf, # beneficiary
                    { v3: [ *ap_dot_fungible ] }, # assets
                    0, # feeAssetItem
                    { unlimited: true } # weightLimit
                  ]
                  events:
                    - name: polkadotXcm.Attempted
                      threshold: *weight_threshold
                      result: { outcome: { Complete: { refTime: '539,494,000', proofSize: '7,133' }} }
                    - name: messageQueue.Processed
                      chain: *relay_chain
                      threshold: *weight_threshold
                      result: {
                        origin: { Ump: { Para: *ap_id }},
                        weightUsed: { refTime: '304,665,000', proofSize: '7,186' },
                        success: true
                      }
              - queries:
                  balance_ap_sender_after:
                    chain: *assets_parachain
                    pallet: system
                    call: account
                    args: [ *ap_wallet ]
                  balance_rc_receiver_after:
                    chain: *relay_chain
                    pallet: system
                    call: account
                    args: [ *rc_wallet ]

          - name: Should reduce the balance of the sender
            actions:
              - asserts:
                  balanceDecreased:
                    args: [
                      {
                        balances: {
                          before: $balance_ap_sender_before,
                          after: $balance_ap_sender_after,
                        },
                        amount: *amount
                      }
                    ]

          - name: Should increase the balance of the receiver
            actions:
              - asserts:
                  balanceIncreased:
                    args: [
                      {
                        balances: {
                          before: $balance_rc_receiver_before,
                          after: $balance_rc_receiver_after,
                        }
                      }
                    ]
