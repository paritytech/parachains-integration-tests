---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9800
    assets_parachain: &assets_parachain
      wsPort: 9810
      paraId: &ap_id 1000
    penpal_parachain: &penpal_parachain
      wsPort: 9820
      paraId: &pp_id 2000
  variables:
    common:
      amount: &amount 20,000,000,000
      require_weight_at_most: &weight_at_most 1,000,000,000
      hrmp_channels:
        proposed_max_capacity: &max_capacity 8
        proposed_max_message_size: &max_message_size 8192
        channel: &channel {
          maxCapacity: 8,
          maxTotalSize: 8192,
          maxMessageSize: 8192,
          msgCount: 0,
          totalSize: 0,
          mqcHead: null,
          senderDeposit: 0,
          recipientDeposit: 0
        }
      treasury_account: &treasury_acc "0x6d6f646c70792f74727372790000000000000000000000000000000000000000"
      treasury_address: &treasury_addr F3opxRbN5ZbjJNU511Kj2TLuzFcDq9BGduA9TgiECafpg29
    chains:
      relay_chain:
        signer: &rc_signer //Alice
        assets_parachain_destination: &ap_dest { v1: { 0, interior: { x1: { parachain: *ap_id }}}}
        ksm: &rc_ksm { concrete: { 0, interior: { here: true }}}
        ksm_fungible: &rc_ksm_fungible { id: *rc_ksm, fun: { fungible: *amount }}
      assets_parachain_account:
        sovereign_account: &ap_sovereign F7fq1jSNVTPfJmaHaXCMtatT1EZefCUsa7rRiQVNR5efcah
        relay_chain_destination: &rc_dest { v1: { parents: 1, interior: { here: true }}}
      penpal_parachain:
        sovereign_account: &pp_sovereign F7fq1jMZkfuCuoMTyiEVAP2DMpMt18WopgBqTJznLihLNbZ
        signer: &pp_signer //Alice
  decodedCalls:
    accept_init_open_request_from_2021:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpAcceptOpenChannel
      args: [
        2021
      ]
    accept_init_open_request_from_2031:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpAcceptOpenChannel
      args: [
        2031
      ]
    accept_init_open_request_from_2032:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpAcceptOpenChannel
      args: [
        2032
      ]
    accept_init_open_request_from_2035:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpAcceptOpenChannel
      args: [
        2035
      ]
    accept_init_open_request_from_2046:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpAcceptOpenChannel
      args: [
        2046
      ]
    init_open_channel_with_2021:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpInitOpenChannel
      args: [
        2021, # recipient
        1000, # proposedMaxCapacity
        102400 # proposedMaxMessageSize
      ]
    init_open_channel_with_2031:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpInitOpenChannel
      args: [
        2031, # recipient
        1000, # proposedMaxCapacity
        102400 # proposedMaxMessageSize
      ]
    init_open_channel_with_2032:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpInitOpenChannel
      args: [
        2032, # recipient
        1000, # proposedMaxCapacity
        102400 # proposedMaxMessageSize
      ]
    init_open_channel_with_2035:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpInitOpenChannel
      args: [
        2035, # recipient
        1000, # proposedMaxCapacity
        102400 # proposedMaxMessageSize
      ]
    init_open_channel_with_2046:
      chain: *relay_chain
      pallet: hrmp
      call: hrmpInitOpenChannel
      args: [
        2046, # recipient
        1000, # proposedMaxCapacity
        102400 # proposedMaxMessageSize
      ]

    ###########################
    # To Polkadot -> Refrendum
    ###########################
    xcm_accept_init_open_request_from_cp:
      chain: *assets_parachain
      pallet: polkadotXcm
      call: send
      args: [
        *rc_dest, # destination
        {
          v2: [ #message
            {
              WithdrawAsset: [*rc_ksm_fungible]
            },
            {
              BuyExecution: {
                  fees: *rc_ksm_fungible,
                  weightLimit: Unlimited
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $accept_init_open_request_from_2021
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $accept_init_open_request_from_2031
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $accept_init_open_request_from_2032
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $accept_init_open_request_from_2035
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $accept_init_open_request_from_2046
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $init_open_channel_with_2021
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $init_open_channel_with_2031
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $init_open_channel_with_2032
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $init_open_channel_with_2035
              }
            },
            {
              Transact: {
                originType: Native,
                requireWeightAtMost: *weight_at_most,
                call: $init_open_channel_with_2046
              }
            },
            RefundSurplus,
            {
              DepositAsset: {
                assets: {
                  Wild: {
                    AllOf: {
                      id: {
                        Concrete: {
                          parents: 0,
                          interior: Here
                        }
                      },
                      fun: Fungible
                    }
                  }
                },
                maxAssets: 1,
                beneficiary: {
                  parents: 0,
                  interior: {
                    X1: {
                      AccountId32: {
                        network: Any,
                        id: *treasury_acc
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]

tests:
  - name: HRMP
    beforeEach:
      - name: DEPENDANCY | Treasury account in the Relay Chain needs to be funded
        actions:
          - extrinsics:
            - chain: *relay_chain
              signer: *rc_signer
              pallet: balances
              call: transfer
              args: [
                *trasury_addr, # destination
                "100,000,000,000,000", # value
              ]
              events:
                - name: balances.Transfer
    describes:
      - name: hrmp.hrmpAcceptOpenChannel && hrmp.hrmpInitOpenChannel (Assets Parachain â†’ Penpal Parachain)
        its:
          - name: Assets Parachain sends a response to the Relay Chain accepting the Penpal Parachain's request for openning a HRMP channel & requesting opening one with it
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *rc_signer
                  sudo: true
                  pallet: xcmPallet
                  call: send
                  args: [
                    *ap_dest, # destination
                    {
                      v2: [ #message
                        {
                          Transact: {
                            originType: Superuser,
                            requireWeightAtMost: *weight_at_most,
                            call: $xcm_accept_init_open_request_from_cp
                          }
                        }
                      ]
                    }
                  ]
                  events:
                    - name: sudo.Sudid
                      attributes:
                        - type: Result<Null, SpRuntimeDispatchError>
                          value: Ok
                    - name: xcmPallet.Sent
                    - name: dmpQueue.ExecutedDownward
                      chain: *assets_parachain
                      attributes:
                        - type: XcmV2TraitsOutcome
                          xcmOutcome: Complete
                          threshold: [10, 10]
                          value: 1,020,807,000
                    - name: polkadotXcm.Sent
                      chain: *assets_parachain
                    - name: ump.ExecutedUpward
                      timeout: 40000
                      attributes:
                        - type: XcmV2TraitsOutcome
                          xcmOutcome: Complete
                          value: 6,000,000,000
                    - name: hrmp.OpenChannelAccepted
                      timeout: 40000
                    - name: hrmp.OpenChannelRequested
                      timeout: 40000
              - queries:
                  open_channels:
                    chain: *relay_chain
                    pallet: hrmp
                    call: hrmpChannels
                    delay: 100000
                    args: [
                      {
                        sender: *pp_id,
                        recipient: *ap_id
                      }
                    ]
              - asserts:
                  equal:
                    args: [
                      $open_channels,
                      *channel
                    ]
