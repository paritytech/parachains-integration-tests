# ---
# settings:
#   chains:
#     relay_chain: &relay_chain
#       wsPort: 8000
#     assets_parachain: &assets_parachain
#       wsPort: 8001
#       paraId: &ap_id 1000
#   variables:
#     common:
#       require_weight_at_most: &weight_at_most {refTime: 1000000000, proofSize: 200000}
#       weight_threshold:  &weight_threshold { refTime: [30, 30], proofSize: [30, 30] }
#     chains:
#       relay_chain:
#         signer: &rc_signer //Alice
#         assets_parachain_destination: &ap_dest { v3: { 0, interior: { x1: { parachain: *ap_id }}}}
#   runtimes:
#     relay_wasm:
#       path: ../../../bin/staging_kusama_runtime.compact.compressed.wasm
#     asset_hub_wasm:
#       path: ../../../bin/asset_hub_kusama_runtime.compact.compressed.wasm
#   decodedCalls:
#     authorize_upgrade_assets_para:
#       chain: *assets_parachain
#       pallet: parachainSystem
#       call: authorizeUpgrade
#       args: [
#         $asset_hub_wasm.hash,
#         false
#       ]
#     xcm_send_authorize_upgrade_assets_para:
#       chain: *relay_chain
#       pallet: xcmPallet
#       call: send
#       encode: false
#       args: [
#         *ap_dest,
#         {
#           v3: [
#             {
#               UnpaidExecution: {
#                 weightLimit: Unlimited
#               }
#             },
#             {
#               Transact: {
#                 originKind: Superuser,
#                 requireWeightAtMost: *weight_at_most,
#                 call: $authorize_upgrade_assets_para
#               }
#             }
#           ]
#         }
#       ]
#     relay_upgrade:
#       chain: *relay_chain
#       pallet: system
#       call: setCode
#       encode: false
#       args: [
#         $relay_wasm,
#       ]
#     utility_with_weight_relay_runtime_upgrade:
#       chain: *relay_chain
#       pallet: utility
#       call: withWeight
#       encode: false
#       args: [
#         $relay_upgrade,
#         *weight_at_most
#       ]

# tests:
#   - name: Runtime Upgrade
#     its:
#       - name: Runtime Upgrase is properly executed
#         actions:
#           - extrinsics:
#             - chain: *relay_chain
#               sudo: true
#               signer: *rc_signer
#               pallet: utility
#               call: forceBatch
#               args: [
#                 [
#                   $xcm_send_authorize_upgrade_assets_para,
#                   $utility_with_weight_relay_runtime_upgrade
#                 ]
#               ]
#               # events:
